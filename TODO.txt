TODO

* add weighted average smoother
* add smoother based on median (as an alternative to the default mean)
* distinction between baselines and climatologies (currently a climatology is calculated by default, and there is now an option to add an independent baseline); there should be added an option to provide a 365-day (or 366...how to handle leap years?) long daily climatology that had been independently calculated as a custom climatology against which the events can be detected. In order to understand how this works, I need to properly define what I mean by baseline and climatology as they are different things in my mind...
* more climatology and baseline options
* output option: summary statistics of built-in climatology
* output option: summary plot of built-in climatology
* define events and climatologies as S3 classes
* maybe change the names 'smooth_percentile_width' and 'smooth_percentile' as they actually have nothing to do with percentiles; in the documentation, make clear how the new names used relate back to the same (but differently named) arguments in the python code
* Add category metric for 'size' of heatwave
* Add block_average metric() 'intensity_max_max'
* Possibly create a mhw_block() function
* If so, also give it a qualitative score as in the python version
* Possible compound hw qualities from Baldwin et al. (in review)
** 1) a minimum number of hot days occurring consecutively to start a heat wave
** 2) a maximum number of cooler (below threshold) days that can occur consecutively for the heat wave to continue
** 3) a minimum number of hot days occurring consecutively that can add onto a heat wave after a break
** For quick reference, we denote a temporal structure definition with three numbers, for example 321 where 3 indicates a minimum initial event
length of three hot days, 2 indicates a maximum break length of two cooler days, and 1 indicates a minimum length of a set of consecutive hot days that can compound on after a break.
** The quantity of interest here is the cumulative annual compound days as a proportion of total heat wave days (hereafter “compound proportion”).
** Once the mean signal in a time series begins to raise, this proportion will increase, to a point
** It will then deminish down to zero as every day becomes greter than the 90th percentile threshold

Text added to `detect()` and repeated here (to be deleted from the function later)
## 1. if a custom baseline is supplied it will be used to derive a climatology and threshold using the calculations below;
## this custom baseline will share the same climatology_start and climatology_end as the main data
## 2. i can also imagine a scenario where one might want to provide a precalculated custom baseline and threshold
## relative to which the events will be detected--in this instance they will not be subject to the calcs below, and they
## will cover the dull duration of the main data where the events will be detected in; this baseline and threshold might
## be one (e.g.) from which the long-term trend had been removed beforehand, etc.; also, the interannual variation might
## not necessarily be constant and the time series might be evolving throughout time, unlike a climatology (see below)
## 3. lastly, i can also foresee the use of custom climatologies (of the mean or median, and threshold--i.e. a daily
## climatology of 365 or 366 days; it will replicated for as many times as is necessary to fit between climatology_start
## and climatology_end; a climatology is therefore a constant annual signal that will repeat year after year
## ...we need to provide proper documentation of these options, and talk about the differences between baselines and
## climatologies, and in the paper give example applications of the various use scenarios.
